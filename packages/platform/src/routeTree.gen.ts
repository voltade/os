/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MainRouteImport } from './routes/_main'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as MainIndexRouteImport } from './routes/_main.index'
import { Route as MainSettingsRouteImport } from './routes/_main.settings'
import { Route as MainDevRouteImport } from './routes/_main.dev'
import { Route as AuthSignupRouteImport } from './routes/_auth.signup'
import { Route as AuthSigninRouteImport } from './routes/_auth.signin'
import { Route as AuthOnboardingRouteImport } from './routes/_auth.onboarding'
import { Route as MainTeamIndexRouteImport } from './routes/_main.team.index'
import { Route as MainSettingsIndexRouteImport } from './routes/_main.settings.index'
import { Route as MainDevIndexRouteImport } from './routes/_main.dev.index'
import { Route as MainSettingsOrganizationsRouteImport } from './routes/_main.settings.organizations'
import { Route as MainDevGitProvidersRouteImport } from './routes/_main.dev.git-providers'
import { Route as MainDevApplicationsRouteImport } from './routes/_main.dev.applications'
import { Route as MainAcceptInvitationInvitationIdRouteImport } from './routes/_main.accept-invitation.$invitationId'
import { Route as AuthOauthConsentRouteImport } from './routes/_auth.oauth.consent'
import { Route as MainDevEnvironmentsIndexRouteImport } from './routes/_main.dev.environments.index'
import { Route as MainAppsAppIdIndexRouteImport } from './routes/_main.apps.$appId.index'
import { Route as MainDevEnvironmentsEnvironmentSlugRouteImport } from './routes/_main.dev.environments.$environmentSlug'
import { Route as MainDevEnvironmentsEnvironmentSlugIndexRouteImport } from './routes/_main.dev.environments.$environmentSlug.index'
import { Route as MainDevEnvironmentsEnvironmentSlugEnvironment_variablesRouteImport } from './routes/_main.dev.environments.$environmentSlug.environment_variables'
import { Route as MainDevEnvironmentsEnvironmentSlugDatabaseRouteImport } from './routes/_main.dev.environments.$environmentSlug.database'
import { Route as MainDevEnvironmentsEnvironmentSlugAppInstallationsRouteImport } from './routes/_main.dev.environments.$environmentSlug.app-installations'

const MainRoute = MainRouteImport.update({
  id: '/_main',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRoute,
} as any)
const MainSettingsRoute = MainSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => MainRoute,
} as any)
const MainDevRoute = MainDevRouteImport.update({
  id: '/dev',
  path: '/dev',
  getParentRoute: () => MainRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRoute,
} as any)
const AuthOnboardingRoute = AuthOnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => AuthRoute,
} as any)
const MainTeamIndexRoute = MainTeamIndexRouteImport.update({
  id: '/team/',
  path: '/team/',
  getParentRoute: () => MainRoute,
} as any)
const MainSettingsIndexRoute = MainSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainSettingsRoute,
} as any)
const MainDevIndexRoute = MainDevIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainDevRoute,
} as any)
const MainSettingsOrganizationsRoute =
  MainSettingsOrganizationsRouteImport.update({
    id: '/organizations',
    path: '/organizations',
    getParentRoute: () => MainSettingsRoute,
  } as any)
const MainDevGitProvidersRoute = MainDevGitProvidersRouteImport.update({
  id: '/git-providers',
  path: '/git-providers',
  getParentRoute: () => MainDevRoute,
} as any)
const MainDevApplicationsRoute = MainDevApplicationsRouteImport.update({
  id: '/applications',
  path: '/applications',
  getParentRoute: () => MainDevRoute,
} as any)
const MainAcceptInvitationInvitationIdRoute =
  MainAcceptInvitationInvitationIdRouteImport.update({
    id: '/accept-invitation/$invitationId',
    path: '/accept-invitation/$invitationId',
    getParentRoute: () => MainRoute,
  } as any)
const AuthOauthConsentRoute = AuthOauthConsentRouteImport.update({
  id: '/oauth/consent',
  path: '/oauth/consent',
  getParentRoute: () => AuthRoute,
} as any)
const MainDevEnvironmentsIndexRoute =
  MainDevEnvironmentsIndexRouteImport.update({
    id: '/environments/',
    path: '/environments/',
    getParentRoute: () => MainDevRoute,
  } as any)
const MainAppsAppIdIndexRoute = MainAppsAppIdIndexRouteImport.update({
  id: '/apps/$appId/',
  path: '/apps/$appId/',
  getParentRoute: () => MainRoute,
} as any)
const MainDevEnvironmentsEnvironmentSlugRoute =
  MainDevEnvironmentsEnvironmentSlugRouteImport.update({
    id: '/environments/$environmentSlug',
    path: '/environments/$environmentSlug',
    getParentRoute: () => MainDevRoute,
  } as any)
const MainDevEnvironmentsEnvironmentSlugIndexRoute =
  MainDevEnvironmentsEnvironmentSlugIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => MainDevEnvironmentsEnvironmentSlugRoute,
  } as any)
const MainDevEnvironmentsEnvironmentSlugEnvironment_variablesRoute =
  MainDevEnvironmentsEnvironmentSlugEnvironment_variablesRouteImport.update({
    id: '/environment_variables',
    path: '/environment_variables',
    getParentRoute: () => MainDevEnvironmentsEnvironmentSlugRoute,
  } as any)
const MainDevEnvironmentsEnvironmentSlugDatabaseRoute =
  MainDevEnvironmentsEnvironmentSlugDatabaseRouteImport.update({
    id: '/database',
    path: '/database',
    getParentRoute: () => MainDevEnvironmentsEnvironmentSlugRoute,
  } as any)
const MainDevEnvironmentsEnvironmentSlugAppInstallationsRoute =
  MainDevEnvironmentsEnvironmentSlugAppInstallationsRouteImport.update({
    id: '/app-installations',
    path: '/app-installations',
    getParentRoute: () => MainDevEnvironmentsEnvironmentSlugRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/onboarding': typeof AuthOnboardingRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/dev': typeof MainDevRouteWithChildren
  '/settings': typeof MainSettingsRouteWithChildren
  '/': typeof MainIndexRoute
  '/oauth/consent': typeof AuthOauthConsentRoute
  '/accept-invitation/$invitationId': typeof MainAcceptInvitationInvitationIdRoute
  '/dev/applications': typeof MainDevApplicationsRoute
  '/dev/git-providers': typeof MainDevGitProvidersRoute
  '/settings/organizations': typeof MainSettingsOrganizationsRoute
  '/dev/': typeof MainDevIndexRoute
  '/settings/': typeof MainSettingsIndexRoute
  '/team': typeof MainTeamIndexRoute
  '/dev/environments/$environmentSlug': typeof MainDevEnvironmentsEnvironmentSlugRouteWithChildren
  '/apps/$appId': typeof MainAppsAppIdIndexRoute
  '/dev/environments': typeof MainDevEnvironmentsIndexRoute
  '/dev/environments/$environmentSlug/app-installations': typeof MainDevEnvironmentsEnvironmentSlugAppInstallationsRoute
  '/dev/environments/$environmentSlug/database': typeof MainDevEnvironmentsEnvironmentSlugDatabaseRoute
  '/dev/environments/$environmentSlug/environment_variables': typeof MainDevEnvironmentsEnvironmentSlugEnvironment_variablesRoute
  '/dev/environments/$environmentSlug/': typeof MainDevEnvironmentsEnvironmentSlugIndexRoute
}
export interface FileRoutesByTo {
  '/onboarding': typeof AuthOnboardingRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/': typeof MainIndexRoute
  '/oauth/consent': typeof AuthOauthConsentRoute
  '/accept-invitation/$invitationId': typeof MainAcceptInvitationInvitationIdRoute
  '/dev/applications': typeof MainDevApplicationsRoute
  '/dev/git-providers': typeof MainDevGitProvidersRoute
  '/settings/organizations': typeof MainSettingsOrganizationsRoute
  '/dev': typeof MainDevIndexRoute
  '/settings': typeof MainSettingsIndexRoute
  '/team': typeof MainTeamIndexRoute
  '/apps/$appId': typeof MainAppsAppIdIndexRoute
  '/dev/environments': typeof MainDevEnvironmentsIndexRoute
  '/dev/environments/$environmentSlug/app-installations': typeof MainDevEnvironmentsEnvironmentSlugAppInstallationsRoute
  '/dev/environments/$environmentSlug/database': typeof MainDevEnvironmentsEnvironmentSlugDatabaseRoute
  '/dev/environments/$environmentSlug/environment_variables': typeof MainDevEnvironmentsEnvironmentSlugEnvironment_variablesRoute
  '/dev/environments/$environmentSlug': typeof MainDevEnvironmentsEnvironmentSlugIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_main': typeof MainRouteWithChildren
  '/_auth/onboarding': typeof AuthOnboardingRoute
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_main/dev': typeof MainDevRouteWithChildren
  '/_main/settings': typeof MainSettingsRouteWithChildren
  '/_main/': typeof MainIndexRoute
  '/_auth/oauth/consent': typeof AuthOauthConsentRoute
  '/_main/accept-invitation/$invitationId': typeof MainAcceptInvitationInvitationIdRoute
  '/_main/dev/applications': typeof MainDevApplicationsRoute
  '/_main/dev/git-providers': typeof MainDevGitProvidersRoute
  '/_main/settings/organizations': typeof MainSettingsOrganizationsRoute
  '/_main/dev/': typeof MainDevIndexRoute
  '/_main/settings/': typeof MainSettingsIndexRoute
  '/_main/team/': typeof MainTeamIndexRoute
  '/_main/dev/environments/$environmentSlug': typeof MainDevEnvironmentsEnvironmentSlugRouteWithChildren
  '/_main/apps/$appId/': typeof MainAppsAppIdIndexRoute
  '/_main/dev/environments/': typeof MainDevEnvironmentsIndexRoute
  '/_main/dev/environments/$environmentSlug/app-installations': typeof MainDevEnvironmentsEnvironmentSlugAppInstallationsRoute
  '/_main/dev/environments/$environmentSlug/database': typeof MainDevEnvironmentsEnvironmentSlugDatabaseRoute
  '/_main/dev/environments/$environmentSlug/environment_variables': typeof MainDevEnvironmentsEnvironmentSlugEnvironment_variablesRoute
  '/_main/dev/environments/$environmentSlug/': typeof MainDevEnvironmentsEnvironmentSlugIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/onboarding'
    | '/signin'
    | '/signup'
    | '/dev'
    | '/settings'
    | '/'
    | '/oauth/consent'
    | '/accept-invitation/$invitationId'
    | '/dev/applications'
    | '/dev/git-providers'
    | '/settings/organizations'
    | '/dev/'
    | '/settings/'
    | '/team'
    | '/dev/environments/$environmentSlug'
    | '/apps/$appId'
    | '/dev/environments'
    | '/dev/environments/$environmentSlug/app-installations'
    | '/dev/environments/$environmentSlug/database'
    | '/dev/environments/$environmentSlug/environment_variables'
    | '/dev/environments/$environmentSlug/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/onboarding'
    | '/signin'
    | '/signup'
    | '/'
    | '/oauth/consent'
    | '/accept-invitation/$invitationId'
    | '/dev/applications'
    | '/dev/git-providers'
    | '/settings/organizations'
    | '/dev'
    | '/settings'
    | '/team'
    | '/apps/$appId'
    | '/dev/environments'
    | '/dev/environments/$environmentSlug/app-installations'
    | '/dev/environments/$environmentSlug/database'
    | '/dev/environments/$environmentSlug/environment_variables'
    | '/dev/environments/$environmentSlug'
  id:
    | '__root__'
    | '/_auth'
    | '/_main'
    | '/_auth/onboarding'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_main/dev'
    | '/_main/settings'
    | '/_main/'
    | '/_auth/oauth/consent'
    | '/_main/accept-invitation/$invitationId'
    | '/_main/dev/applications'
    | '/_main/dev/git-providers'
    | '/_main/settings/organizations'
    | '/_main/dev/'
    | '/_main/settings/'
    | '/_main/team/'
    | '/_main/dev/environments/$environmentSlug'
    | '/_main/apps/$appId/'
    | '/_main/dev/environments/'
    | '/_main/dev/environments/$environmentSlug/app-installations'
    | '/_main/dev/environments/$environmentSlug/database'
    | '/_main/dev/environments/$environmentSlug/environment_variables'
    | '/_main/dev/environments/$environmentSlug/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  MainRoute: typeof MainRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRoute
    }
    '/_main/settings': {
      id: '/_main/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof MainSettingsRouteImport
      parentRoute: typeof MainRoute
    }
    '/_main/dev': {
      id: '/_main/dev'
      path: '/dev'
      fullPath: '/dev'
      preLoaderRoute: typeof MainDevRouteImport
      parentRoute: typeof MainRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/onboarding': {
      id: '/_auth/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof AuthOnboardingRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_main/team/': {
      id: '/_main/team/'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof MainTeamIndexRouteImport
      parentRoute: typeof MainRoute
    }
    '/_main/settings/': {
      id: '/_main/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof MainSettingsIndexRouteImport
      parentRoute: typeof MainSettingsRoute
    }
    '/_main/dev/': {
      id: '/_main/dev/'
      path: '/'
      fullPath: '/dev/'
      preLoaderRoute: typeof MainDevIndexRouteImport
      parentRoute: typeof MainDevRoute
    }
    '/_main/settings/organizations': {
      id: '/_main/settings/organizations'
      path: '/organizations'
      fullPath: '/settings/organizations'
      preLoaderRoute: typeof MainSettingsOrganizationsRouteImport
      parentRoute: typeof MainSettingsRoute
    }
    '/_main/dev/git-providers': {
      id: '/_main/dev/git-providers'
      path: '/git-providers'
      fullPath: '/dev/git-providers'
      preLoaderRoute: typeof MainDevGitProvidersRouteImport
      parentRoute: typeof MainDevRoute
    }
    '/_main/dev/applications': {
      id: '/_main/dev/applications'
      path: '/applications'
      fullPath: '/dev/applications'
      preLoaderRoute: typeof MainDevApplicationsRouteImport
      parentRoute: typeof MainDevRoute
    }
    '/_main/accept-invitation/$invitationId': {
      id: '/_main/accept-invitation/$invitationId'
      path: '/accept-invitation/$invitationId'
      fullPath: '/accept-invitation/$invitationId'
      preLoaderRoute: typeof MainAcceptInvitationInvitationIdRouteImport
      parentRoute: typeof MainRoute
    }
    '/_auth/oauth/consent': {
      id: '/_auth/oauth/consent'
      path: '/oauth/consent'
      fullPath: '/oauth/consent'
      preLoaderRoute: typeof AuthOauthConsentRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_main/dev/environments/': {
      id: '/_main/dev/environments/'
      path: '/environments'
      fullPath: '/dev/environments'
      preLoaderRoute: typeof MainDevEnvironmentsIndexRouteImport
      parentRoute: typeof MainDevRoute
    }
    '/_main/apps/$appId/': {
      id: '/_main/apps/$appId/'
      path: '/apps/$appId'
      fullPath: '/apps/$appId'
      preLoaderRoute: typeof MainAppsAppIdIndexRouteImport
      parentRoute: typeof MainRoute
    }
    '/_main/dev/environments/$environmentSlug': {
      id: '/_main/dev/environments/$environmentSlug'
      path: '/environments/$environmentSlug'
      fullPath: '/dev/environments/$environmentSlug'
      preLoaderRoute: typeof MainDevEnvironmentsEnvironmentSlugRouteImport
      parentRoute: typeof MainDevRoute
    }
    '/_main/dev/environments/$environmentSlug/': {
      id: '/_main/dev/environments/$environmentSlug/'
      path: '/'
      fullPath: '/dev/environments/$environmentSlug/'
      preLoaderRoute: typeof MainDevEnvironmentsEnvironmentSlugIndexRouteImport
      parentRoute: typeof MainDevEnvironmentsEnvironmentSlugRoute
    }
    '/_main/dev/environments/$environmentSlug/environment_variables': {
      id: '/_main/dev/environments/$environmentSlug/environment_variables'
      path: '/environment_variables'
      fullPath: '/dev/environments/$environmentSlug/environment_variables'
      preLoaderRoute: typeof MainDevEnvironmentsEnvironmentSlugEnvironment_variablesRouteImport
      parentRoute: typeof MainDevEnvironmentsEnvironmentSlugRoute
    }
    '/_main/dev/environments/$environmentSlug/database': {
      id: '/_main/dev/environments/$environmentSlug/database'
      path: '/database'
      fullPath: '/dev/environments/$environmentSlug/database'
      preLoaderRoute: typeof MainDevEnvironmentsEnvironmentSlugDatabaseRouteImport
      parentRoute: typeof MainDevEnvironmentsEnvironmentSlugRoute
    }
    '/_main/dev/environments/$environmentSlug/app-installations': {
      id: '/_main/dev/environments/$environmentSlug/app-installations'
      path: '/app-installations'
      fullPath: '/dev/environments/$environmentSlug/app-installations'
      preLoaderRoute: typeof MainDevEnvironmentsEnvironmentSlugAppInstallationsRouteImport
      parentRoute: typeof MainDevEnvironmentsEnvironmentSlugRoute
    }
  }
}

interface AuthRouteChildren {
  AuthOnboardingRoute: typeof AuthOnboardingRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthOauthConsentRoute: typeof AuthOauthConsentRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthOnboardingRoute: AuthOnboardingRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthOauthConsentRoute: AuthOauthConsentRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MainDevEnvironmentsEnvironmentSlugRouteChildren {
  MainDevEnvironmentsEnvironmentSlugAppInstallationsRoute: typeof MainDevEnvironmentsEnvironmentSlugAppInstallationsRoute
  MainDevEnvironmentsEnvironmentSlugDatabaseRoute: typeof MainDevEnvironmentsEnvironmentSlugDatabaseRoute
  MainDevEnvironmentsEnvironmentSlugEnvironment_variablesRoute: typeof MainDevEnvironmentsEnvironmentSlugEnvironment_variablesRoute
  MainDevEnvironmentsEnvironmentSlugIndexRoute: typeof MainDevEnvironmentsEnvironmentSlugIndexRoute
}

const MainDevEnvironmentsEnvironmentSlugRouteChildren: MainDevEnvironmentsEnvironmentSlugRouteChildren =
  {
    MainDevEnvironmentsEnvironmentSlugAppInstallationsRoute:
      MainDevEnvironmentsEnvironmentSlugAppInstallationsRoute,
    MainDevEnvironmentsEnvironmentSlugDatabaseRoute:
      MainDevEnvironmentsEnvironmentSlugDatabaseRoute,
    MainDevEnvironmentsEnvironmentSlugEnvironment_variablesRoute:
      MainDevEnvironmentsEnvironmentSlugEnvironment_variablesRoute,
    MainDevEnvironmentsEnvironmentSlugIndexRoute:
      MainDevEnvironmentsEnvironmentSlugIndexRoute,
  }

const MainDevEnvironmentsEnvironmentSlugRouteWithChildren =
  MainDevEnvironmentsEnvironmentSlugRoute._addFileChildren(
    MainDevEnvironmentsEnvironmentSlugRouteChildren,
  )

interface MainDevRouteChildren {
  MainDevApplicationsRoute: typeof MainDevApplicationsRoute
  MainDevGitProvidersRoute: typeof MainDevGitProvidersRoute
  MainDevIndexRoute: typeof MainDevIndexRoute
  MainDevEnvironmentsEnvironmentSlugRoute: typeof MainDevEnvironmentsEnvironmentSlugRouteWithChildren
  MainDevEnvironmentsIndexRoute: typeof MainDevEnvironmentsIndexRoute
}

const MainDevRouteChildren: MainDevRouteChildren = {
  MainDevApplicationsRoute: MainDevApplicationsRoute,
  MainDevGitProvidersRoute: MainDevGitProvidersRoute,
  MainDevIndexRoute: MainDevIndexRoute,
  MainDevEnvironmentsEnvironmentSlugRoute:
    MainDevEnvironmentsEnvironmentSlugRouteWithChildren,
  MainDevEnvironmentsIndexRoute: MainDevEnvironmentsIndexRoute,
}

const MainDevRouteWithChildren =
  MainDevRoute._addFileChildren(MainDevRouteChildren)

interface MainSettingsRouteChildren {
  MainSettingsOrganizationsRoute: typeof MainSettingsOrganizationsRoute
  MainSettingsIndexRoute: typeof MainSettingsIndexRoute
}

const MainSettingsRouteChildren: MainSettingsRouteChildren = {
  MainSettingsOrganizationsRoute: MainSettingsOrganizationsRoute,
  MainSettingsIndexRoute: MainSettingsIndexRoute,
}

const MainSettingsRouteWithChildren = MainSettingsRoute._addFileChildren(
  MainSettingsRouteChildren,
)

interface MainRouteChildren {
  MainDevRoute: typeof MainDevRouteWithChildren
  MainSettingsRoute: typeof MainSettingsRouteWithChildren
  MainIndexRoute: typeof MainIndexRoute
  MainAcceptInvitationInvitationIdRoute: typeof MainAcceptInvitationInvitationIdRoute
  MainTeamIndexRoute: typeof MainTeamIndexRoute
  MainAppsAppIdIndexRoute: typeof MainAppsAppIdIndexRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainDevRoute: MainDevRouteWithChildren,
  MainSettingsRoute: MainSettingsRouteWithChildren,
  MainIndexRoute: MainIndexRoute,
  MainAcceptInvitationInvitationIdRoute: MainAcceptInvitationInvitationIdRoute,
  MainTeamIndexRoute: MainTeamIndexRoute,
  MainAppsAppIdIndexRoute: MainAppsAppIdIndexRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  MainRoute: MainRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

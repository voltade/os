{{- if .Values.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "auth.fullname" . }}
  labels:
    {{- include "auth.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "1"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "auth.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "auth.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "auth.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-db
          image: "{{ .Values.db.initContainerImage.repository }}:{{ .Values.db.initContainerImage.tag | default "15-alpine" }}"
          imagePullPolicy: {{ .Values.db.initContainerImage.pullPolicy }}
          env:
            - name: API_EXTERNAL_URL
              value: http://{{ .Values.global.nameOverride }}.{{ .Values.global.baseDomain }}
            - name: GOTRUE_SITE_URL
              value: http://{{ .Values.global.nameOverride }}.{{ .Values.global.baseDomain }}
            - name: GOTRUE_SMTP_ADMIN_EMAIL
              value: "{{ .Values.global.nameOverride }}@{{ .Values.global.baseDomain }}"
            - name: GOTRUE_SMTP_SENDER_NAME
              value: "{{ .Values.global.nameOverride }}"
            {{- range $key, $value := .Values.environment }}
            - name: {{ $key }}
              {{- if kindIs "map" $value }}
              {{- if hasKey $value "valueFrom" }}
              valueFrom:
                {{- toYaml $value.valueFrom | nindent 16 }}
              {{- else }}
              value: {{ toYaml $value | quote }}
              {{- end }}
              {{- else }}
              value: {{ $value | quote }}
              {{- end }}
            {{- end }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              until pg_isready -h $(DB_HOST) -p $(DB_PORT) -U $(DB_USER); do
              echo "Waiting for database to start..."
              sleep 2
              done
            - echo "Database is ready"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.environment }}
            - name: {{ $key }}
              {{- if kindIs "map" $value }}
              {{- if hasKey $value "valueFrom" }}
              valueFrom:
                {{- toYaml $value.valueFrom | nindent 16 }}
              {{- else }}
              value: {{ toYaml $value | quote }}
              {{- end }}
              {{- else }}
              value: {{ $value | quote }}
              {{- end }}
            {{- end }}
            - name: GOTRUE_DB_DRIVER
              value: $(DB_DRIVER)
            - name: GOTRUE_DB_DATABASE_URL
              value: $(DB_DRIVER)://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?search_path=auth&sslmode=$(DB_SSL)
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 9999
              protocol: TCP
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

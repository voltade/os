apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cnpg-cluster
  labels: {{- include "environment.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-1"
spec:
  # https://github.com/voltade/voltade-os/pkgs/container/postgres
  imageName: ghcr.io/voltade/postgres:17.5-20250821-cac6877
  instances: 1
  certificates:
    serverCASecret: cnpg-tls
    serverTLSSecret: cnpg-tls
  storage:
    size: 4Gi
  postgresql:
    parameters:
      pgsodium.enable_event_trigger: "off"
      pgsodium.getkey_script: /usr/share/postgresql/17/extension/pgsodium_getkey
    shared_preload_libraries:
      - supabase_vault
  managed:
    roles:
      # https://cloudnative-pg.io/documentation/current/declarative_role_management/
      # https://cloudnative-pg.io/documentation/current/cloudnative-pg.v1/#postgresql-cnpg-io-v1-RoleConfiguration
      # https://www.postgresql.org/docs/current/sql-createrole.html
      - name: app
        login: true
        inRoles:
          - core_migrator
          - custom_migrator
          - openfga_admin

      - name: core_migrator
        login: true
        connectionLimit: 1
        passwordSecret:
          name: cnpg-core-migrator

      - name: custom_migrator
        login: true
        connectionLimit: 1
        passwordSecret:
          name: cnpg-custom-migrator

      - name: authenticator
        comment: |
          For the PostgREST to connect to the database. It's IN ROLE of the roles that PostgREST is able to switch to based on the role field in valid JWT tokens provided by the end users. But it does not inherit the privileges of those roles, so the role switching must be done explicitly (handled by PostgREST).
        login: true
        inherit: false
        inRoles:
          - authenticated
          - anon
        passwordSecret:
          name: cnpg-authenticator

      - name: authenticated
      - name: anon

      - name: service_role
        comment: |
          For the Supabase Studio to connect to the database.
        login: true
        inRoles:
          - authenticated
          - anon
        bypassrls: true
        passwordSecret:
          name: cnpg-service-role

      - name: openfga_admin
        login: true
        passwordSecret:
          name: cnpg-openfga-admin

  bootstrap:
    initdb:
      database: app
      owner: app
      dataChecksums: true
      postInitApplicationSQL:
        - create role core_migrator;
        - grant create on database app to core_migrator;

        - create schema extensions;
        - create extension supabase_vault cascade;
        - grant usage on schema vault to core_migrator;
        - grant execute on all functions in schema vault to core_migrator;
        - grant select on all tables in schema vault to core_migrator;
        - grant references on all tables in schema vault to core_migrator;
        - alter database app set search_path = extensions, public;

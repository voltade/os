apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

resources:
  - cnpg-database.yaml
  - httproute-public.yaml
  - httproute-admin.yaml
  - secret-dsn.yaml

helmCharts:
  - repo: https://k8s.ory.sh/helm/charts
    name: kratos
    # https://artifacthub.io/packages/helm/ory/kratos
    version: 0.57.2
    releaseName: kratos
    namespace: platform
    # https://artifacthub.io/packages/helm/ory/kratos?modal=values
    valuesInline:
      image:
        tag: v1.3.1-distroless

      # https://k8s.ory.sh/helm/kratos.html#installation
      kratos:
        development: true

        # https://www.ory.sh/docs/kratos/quickstart#quickstart-configuration
        # https://www.ory.sh/docs/kratos/reference/configuration
        config:
          dev: true

          serve:
            public:
              base_url: http://kratos.127.0.0.1.nip.io

              # https://www.ory.sh/docs/kratos/guides/setting-up-cors
              cors:
                enabled: true
                allowed_origins:
                  - http://127.0.0.1.nip.io
                  - http://*.127.0.0.1.nip.io
                allowed_methods:
                  - POST
                  - GET
                  - PUT
                  - PATCH
                  - DELETE
                allowed_headers:
                  - Authorization
                  - Cookie
                  - Content-Type
                exposed_headers:
                  - Content-Type
                  - Set-Cookie

            admin:
              base_url: http://kratos-admin

          session:
            whoami:
              # https://www.ory.sh/docs/kratos/self-hosted/mfa#enforce-mfa
              # required_aal: aal1
              tokenizer:
                # https://www.ory.sh/docs/identities/session-to-jwt-cors#json-web-token-templates
                templates:
                  postgrest:
                    # https://www.ory.sh/docs/identities/session-to-jwt-cors#json-web-token-signing-keys
                    # Example JWK. TODO: replace to generated JWK for production.
                    # See: jwt-jwks-set-pair.json
                    jwks_url: base64://ewogICJrZXlzIjogWwogICAgewogICAgICAia3R5IjogIkVDIiwKICAgICAgImQiOiAiNkFISXhVd0dqVXg5UDhUY0xOM1ZlMnFEUkppcXNRRFZ3T3g1TDZUcjlOdTVXZmltQmtWUjlyazhPVmU5OEVSUCIsCiAgICAgICJ1c2UiOiAic2lnIiwKICAgICAgImNydiI6ICJQLTM4NCIsCiAgICAgICJraWQiOiAiMXZ5WHpldzY3VTNTcWx1cmN1ZkVRRFI5ai11aVROZWNoMW96UTBOSG90NCIsCiAgICAgICJ4IjogInYySWF3N1g2eE5SNVJWOWk3eGU1NHByQk5fWmpYb2NiSDE0MW44OFVxSGlqQTBsaVE4VWl0QlVFMUlyVGVhd3ciLAogICAgICAieSI6ICIyYTZQMFlpbXlQRVI3anBQc09RbkxLWGJmZWtWb2dpOWJpN0V6TXM0LU5NWG0wQVNhcjd4eDhsUU5mbmFsYzNtIiwKICAgICAgImFsZyI6ICJFUzI1NiIKICAgIH0KICBdCn0K

                    # https://www.ory.sh/docs/identities/session-to-jwt-cors#json-web-token-claim-mapper
                    # See: jwt-claim-mapper.jsonnet
                    # The `identity.metadata_public.orgs` is set to the identity by the after registration hook (/api/kratos/hooks/registration), and the `aud` claim can be used by PostgREST: https://docs.postgrest.org/en/v13/references/auth.html#jwt-aud-validation
                    claims_mapper_url: base64://bG9jYWwgY2xhaW1zID0gc3RkLmV4dFZhcignY2xhaW1zJyk7CmxvY2FsIHNlc3Npb24gPSBzdGQuZXh0VmFyKCdzZXNzaW9uJyk7Cgp7CiAgY2xhaW1zOiBjbGFpbXMgewogICAgYXVkOiBzZXNzaW9uLmlkZW50aXR5Lm1ldGFkYXRhX3B1YmxpYy5vcmdzCiAgfQp9Cg==

          selfservice:
            default_browser_return_url: http://127.0.0.1.nip.io/settings
            allowed_return_urls:
              - http://127.0.0.1.nip.io

            methods:
              password:
                enabled: false
              passkey:
                enabled: false
              code:
                passwordless_enabled: true
              # https://www.ory.sh/docs/kratos/passwordless/passkeys#passkeys-with-the-dedicated-passkey-strategy
              webauthn:
                enabled: true
                config:
                  passwordless: false
                  rp:
                    display_name: Voltade
                    id: voltade.com
                    origin: http://127.0.1.nip.io
              totp:
                enabled: true
                config:
                  issuer: Voltade
              lookup_secret:
                enabled: false
              link:
                enabled: false

            flows:
              error:
                ui_url: http://127.0.0.1.nip.io/error
              logout:
                after:
                  default_browser_return_url: http://127.0.0.1.nip.io/login
              settings:
                ui_url: http://127.0.0.1.nip.io/settings
                privileged_session_max_age: 15m
                # https://www.ory.sh/docs/kratos/self-hosted/mfa#enforce-mfa
                required_aal: highest_available
              recovery:
                enabled: true
                ui_url: http://127.0.0.1.nip.io/recovery
                use: code
              verification:
                enabled: true
                ui_url: http://127.0.0.1.nip.io/verification
                use: code
                after:
                  default_browser_return_url: http://127.0.0.1.nip.io/settings
              login:
                ui_url: http://127.0.0.1.nip.io/login
                lifespan: 1h
                style: unified
                # after:
                #   hooks:
                #     - hook: web_hook
                #       config:
                #         url: http://socat:5173/api/kratos/hooks/login
                #         method: POST
                #         # https://www.ory.sh/docs/guides/integrate-with-ory-cloud-through-webhooks#jsonnet-templating
                #         # function(ctx) { flow: ctx.flow, identity: ctx.identity }
                #         body: base64://ZnVuY3Rpb24oY3R4KSB7IGZsb3c6IGN0eC5mbG93LCBpZGVudGl0eTogY3R4LmlkZW50aXR5IH0=
                #         response:
                #           parse: true
              registration:
                ui_url: http://127.0.0.1.nip.io/registration
                lifespan: 1h
                after:
                  # https://www.ory.sh/docs/kratos/hooks/configure-hooks#triggers-based-on-authentication-methods
                  code:
                    hooks:
                      - hook: session
                      - hook: web_hook
                        config:
                          url: http://socat:5173/api/kratos/hooks/pre-registration
                          method: POST
                          # https://www.ory.sh/docs/guides/integrate-with-ory-cloud-through-webhooks#jsonnet-templating
                          # function(ctx) { flow: ctx.flow, identity: ctx.identity }
                          body: base64://ZnVuY3Rpb24oY3R4KSB7IGZsb3c6IGN0eC5mbG93LCBpZGVudGl0eTogY3R4LmlkZW50aXR5IH0=
                          response:
                            parse: true
                      - hook: web_hook
                        config:
                          url: http://socat:5173/api/kratos/hooks/post-registration
                          method: POST
                          # https://www.ory.sh/docs/guides/integrate-with-ory-cloud-through-webhooks#jsonnet-templating
                          # function(ctx) { flow: ctx.flow, identity: ctx.identity }
                          body: base64://ZnVuY3Rpb24oY3R4KSB7IGZsb3c6IGN0eC5mbG93LCBpZGVudGl0eTogY3R4LmlkZW50aXR5IH0=
                          response:
                            parse: false

                  oidc:
                    hooks:
                      - hook: session
                      - hook: web_hook
                        config:
                          url: http://socat:5173/api/kratos/hooks/registration
                          method: POST
                          # https://www.ory.sh/docs/guides/integrate-with-ory-cloud-through-webhooks#jsonnet-templating
                          # function(ctx) { flow: ctx.flow, identity: ctx.identity }
                          body: base64://ZnVuY3Rpb24oY3R4KSB7IGZsb3c6IGN0eC5mbG93LCBpZGVudGl0eTogY3R4LmlkZW50aXR5IH0=
                          response:
                            parse: true

          identity:
            default_schema_id: default
            schemas:
              - id: default
                url: http://socat:5173/api/kratos/identity.email.schema.json
          courier:
            # https://www.ory.sh/docs/kratos/emails-sms/sending-emails-smtp#smtp-security-mechanisms
            smtp:
              connection_uri: smtp://inbucket.inbucket.svc.cluster.local:2500/?disable_starttls=true
            sms:
              enabled: true
              from: "Voltade"
              request_config:
                url: https://api.twillio.com/sms/send
                method: ""
                headers: {}
                body: file:///path/to/body.jsonnet
                auth:
                  type: api_key
                  config:
                    name: ""
                    value: ""
                    in: header

        automigration:
          enabled: true
          type: initContainer

      # https://k8s.ory.sh/helm/kratos.html#set-up-dsn-variable-on-runtime
      deployment:
        extraEnv:
          - name: DSN
            valueFrom:
              secretKeyRef:
                name: kratos-dsn
                key: dsn
      statefulSet:
        extraEnv:
          - name: DSN
            valueFrom:
              secretKeyRef:
                name: kratos-dsn
                key: dsn
      job:
        extraEnv:
          - name: DSN
            valueFrom:
              secretKeyRef:
                name: kratos-dsn
                key: dsn
      cronjob:
        cleanup:
          extraEnv:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: kratos-dsn
                  key: dsn

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

helmCharts:
  - repo: https://topolvm.github.io/topolvm
    name: topolvm
    # https://artifacthub.io/packages/helm/topolvm/topolvm
    version: 15.6.1
    releaseName: topolvm
    namespace: kube-system
    # https://github.com/topolvm/topolvm/blob/main/charts/topolvm/values.yaml
    valuesInline:
      cert-manager:
        enabled: false

      lvmd:
        managed: false # We'll manage lvmd ourselves
        deviceClasses:
          - name: thin
            volume-group: local_storage_vg # Volume group to be created
            default: true
            spare-gb: 10
            type: thin
            thin-pool:
              name: local_storage_thin
              overprovision-ratio: 10.0

      node:
        lvmdEmbedded: true
        env:
          - name: LVM_SYSTEM_DIR
            value: /tmp
        tolerations:
          - key: node-role.kubernetes.io/postgres
            operator: Exists
            effect: NoSchedule
        # Add init container to create volume group and thin pool
        initContainers:
          - name: lvm-setup
            image: alpine:3.18
            securityContext:
              privileged: true
            volumeMounts:
              - name: dev
                mountPath: /dev
              - name: run-udev
                mountPath: /run/udev
            command:
              - /bin/sh
              - -c
              - |
                set -e
                apk add --no-cache lvm2 util-linux

                echo "Available block devices:"
                lsblk

                # Hardcode the device path for local-storage
                DISK_PATH="/dev/mapper/sda5-encrypted"

                echo "Using disk: $DISK_PATH"

                # Verify the device exists
                if [ ! -b "$DISK_PATH" ]; then
                  echo "Error: Device $DISK_PATH does not exist"
                  ls -la /dev/mapper/
                  exit 1
                fi

                # Check if VG already exists
                if ! vgs | grep -q "local_storage_vg"; then
                  echo "Creating VG local_storage_vg"
                  vgcreate local_storage_vg "$DISK_PATH"
                fi

                # Check if thin pool already exists
                if ! lvs | grep -q "local_storage_thin"; then
                  echo "Creating thin pool local_storage_thin"
                  lvcreate -l 100%FREE --chunksize 256 -T -A n -n local_storage_thin local_storage_vg
                fi

                echo "LVM setup complete"
        additionalVolumes:
          - name: dev
            hostPath:
              path: /dev
          - name: run-udev
            hostPath:
              path: /run/udev

      # Storage class configuration
      storageClasses:
        - name: topolvm-thin-provisioner
          storageClass:
            fsType: xfs
            isDefaultClass: false # Set to true if you want this as default
            volumeBindingMode: WaitForFirstConsumer
            allowVolumeExpansion: true
            additionalParameters:
              topolvm.io/device-class: thin
            reclaimPolicy: Delete

      # Controller configuration
      controller:
        replicaCount: 1 # Single replica for smaller setups
        storageCapacityTracking:
          enabled: true

      # Disable scheduler (not needed for basic setups)
      scheduler:
        enabled: false

      # Priority class
      priorityClass:
        enabled: true
        name: topolvm
        value: 1000000
